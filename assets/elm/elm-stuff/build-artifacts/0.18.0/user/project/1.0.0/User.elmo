var _user$project$User$initialModel = function (socketUrl) {
	return {email: '', password: '', passwordConfirmation: '', isLoggedIn: false, socketUrl: socketUrl};
};
var _user$project$User$Model = F5(
	function (a, b, c, d, e) {
		return {email: a, password: b, passwordConfirmation: c, isLoggedIn: d, socketUrl: e};
	});
var _user$project$User$NoOp = {ctor: 'NoOp'};
var _user$project$User$RegisterError = function (a) {
	return {ctor: 'RegisterError', _0: a};
};
var _user$project$User$RegisterSuccess = function (a) {
	return {ctor: 'RegisterSuccess', _0: a};
};
var _user$project$User$register = F3(
	function (socketUrl, email, password) {
		var payload = _elm_lang$core$Json_Encode$object(
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'email',
					_1: _elm_lang$core$Json_Encode$string(email)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'password',
						_1: _elm_lang$core$Json_Encode$string(password)
					},
					_1: {ctor: '[]'}
				}
			});
		var push = A2(
			_saschatimme$elm_phoenix$Phoenix_Push$onError,
			_user$project$User$RegisterError,
			A2(
				_saschatimme$elm_phoenix$Phoenix_Push$onOk,
				_user$project$User$RegisterSuccess,
				A2(
					_saschatimme$elm_phoenix$Phoenix_Push$withPayload,
					payload,
					A2(_saschatimme$elm_phoenix$Phoenix_Push$init, 'room', 'room:user:register'))));
		return A2(_saschatimme$elm_phoenix$Phoenix$push, socketUrl, push);
	});
var _user$project$User$LoginError = function (a) {
	return {ctor: 'LoginError', _0: a};
};
var _user$project$User$LoginSuccess = function (a) {
	return {ctor: 'LoginSuccess', _0: a};
};
var _user$project$User$login = F3(
	function (socketUrl, email, password) {
		var payload = _elm_lang$core$Json_Encode$object(
			{
				ctor: '::',
				_0: {
					ctor: '_Tuple2',
					_0: 'email',
					_1: _elm_lang$core$Json_Encode$string(email)
				},
				_1: {
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: 'password',
						_1: _elm_lang$core$Json_Encode$string(password)
					},
					_1: {ctor: '[]'}
				}
			});
		var push = A2(
			_saschatimme$elm_phoenix$Phoenix_Push$onError,
			_user$project$User$LoginError,
			A2(
				_saschatimme$elm_phoenix$Phoenix_Push$onOk,
				_user$project$User$LoginSuccess,
				A2(
					_saschatimme$elm_phoenix$Phoenix_Push$withPayload,
					payload,
					A2(_saschatimme$elm_phoenix$Phoenix_Push$init, 'room', 'room:user:login'))));
		return A2(_saschatimme$elm_phoenix$Phoenix$push, socketUrl, push);
	});
var _user$project$User$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'NoOp':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'UpdatePassword':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{password: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdatePasswordConfirmation':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{passwordConfirmation: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'UpdateEmail':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{email: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SubmitLogin':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$core$Platform_Cmd$batch(
						{
							ctor: '::',
							_0: A3(_user$project$User$login, model.socketUrl, model.email, model.password),
							_1: {ctor: '[]'}
						})
				};
			case 'SubmitRegister':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: _elm_lang$core$Platform_Cmd$batch(
						{
							ctor: '::',
							_0: A3(_user$project$User$register, model.socketUrl, model.email, model.password),
							_1: {ctor: '[]'}
						})
				};
			case 'LoginSuccess':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{isLoggedIn: true}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'LoginError':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'RegisterSuccess':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$User$SubmitRegister = {ctor: 'SubmitRegister'};
var _user$project$User$SubmitLogin = {ctor: 'SubmitLogin'};
var _user$project$User$UpdateEmail = function (a) {
	return {ctor: 'UpdateEmail', _0: a};
};
var _user$project$User$UpdatePasswordConfirmation = function (a) {
	return {ctor: 'UpdatePasswordConfirmation', _0: a};
};
var _user$project$User$UpdatePassword = function (a) {
	return {ctor: 'UpdatePassword', _0: a};
};
var _user$project$User$loginView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('user__login'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$form,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onSubmit(_user$project$User$SubmitLogin),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('email'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$User$UpdateEmail),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$placeholder('email'),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('password'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$User$UpdatePassword),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$placeholder('password'),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_user$project$Components_Atoms_Button$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('submit'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Login'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}),
			_1: {ctor: '[]'}
		});
};
var _user$project$User$registerView = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('user__register'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$form,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Events$onSubmit(_user$project$User$SubmitRegister),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$input,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$type_('email'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$User$UpdateEmail),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$placeholder('email'),
									_1: {ctor: '[]'}
								}
							}
						},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$type_('password'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onInput(_user$project$User$UpdatePassword),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$placeholder('password'),
										_1: {ctor: '[]'}
									}
								}
							},
							{ctor: '[]'}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$input,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$type_('password'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$User$UpdatePasswordConfirmation),
										_1: {
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$placeholder('confirm password'),
											_1: {ctor: '[]'}
										}
									}
								},
								{ctor: '[]'}),
							_1: {
								ctor: '::',
								_0: A2(
									_user$project$Components_Atoms_Button$button,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$type_('submit'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Login'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		});
};
